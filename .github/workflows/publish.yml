name: Publish
on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci --prefer-offline --no-audit --progress=false --ignore-scripts
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npx nx format:check
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=test --parallel=3 --ci --code-coverage
      - run: npx nx affected --target=build --parallel=3
      - name: Set version
        run: npx nx release version minor
      - id: package
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
      - name: Update changelog
        run: npx nx release changelog ${{ steps.package.outputs.version }}
      - name: Publish
        run: npx nx run-many --target=publish --parallel=3 --ver=${{ steps.package.outputs.version }} --tag=latest
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "build(github): publish ${{ steps.package.outputs.version }} [skip ci]"
          tagging_message: "v${{ steps.package.outputs.version }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: Release ${{ steps.package.outputs.version }}
          draft: false
          prerelease: false