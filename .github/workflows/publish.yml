name: Publish
on:
  push:
    branches:
      - main

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: run trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL'
      - name: Check for vulnerabilities
        id: check
        run: |
          if grep -q "CRITICAL" trivy-results.txt; then
            echo "Critical vulnerability found, stopping the workflow."
            cat trivy-results.txt
            exit 1
          else
            echo "No critical vulnerabilities found."
          fi
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci --prefer-offline --no-audit --progress=false --ignore-scripts
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npx nx format:check
      - run: npx nx affected --target=lint --parallel=3
      - run: npx nx affected --target=test --parallel=3 --ci --code-coverage
      - run: npx nx affected --target=build --parallel=3
      - name: Set version
        run: npx nx release version minor
      - id: package
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
      - name: Set up Git user
        run: |
          git config --global user.name "Emil Juchnikowski"
          git config --global user.email "emil@juchnikowski.com"
      - name: Update changelog
        run: npx nx release changelog ${{ steps.package.outputs.version }}
      - name: Set NPM token
        run: echo //registry.npmjs.org/:_authToken="${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Check login
        run: npm whoami
      - name: Publish to NPM
        run: npx nx run-many -t nx-release-publish
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "build(github): publish ${{ steps.package.outputs.version }} [skip ci]"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: Release ${{ steps.package.outputs.version }}
          draft: false
          prerelease: false
