name: Publish
on:
  push:
    branches:
      - main


jobs:
  main:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: run trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL'
      - name: Check for vulnerabilities
        id: check
        run: |
          if grep -q "CRITICAL" trivy-results.txt; then
            echo "Critical vulnerability found, stopping the workflow."
            cat trivy-results.txt
            exit 1
          else
            echo "No critical vulnerabilities found."
          fi
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          node-version: '23.4.0'
      - run: npx pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"
      - run: npx nx format:check
      - run: npx pnpm exec nx affected -t lint test build
      - name: Set version
        run: npx nx release version minor && npm version minor --no-git-tag-version
      - id: package
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Set up Git user
        run: |
          git config --global user.name "Emil Juchnikowski"
          git config --global user.email "emil@juchnikowski.com"
      - name: Update changelog
        run: npx nx release changelog ${{ steps.package.outputs.version }} --tag-pattern="v${{ steps.package.outputs.version }}"
      - name: Set NPM token
        run: echo //registry.npmjs.org/:_authToken="${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Check login
        run: npm whoami
      - name: Publish to NPM
        run: npx nx run-many -t nx-release-publish
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "build(github): publish ${{ steps.package.outputs.version }} [skip ci]"
          push_options: "--follow-tags"
        env:
          NX_CLOUD_DISTRIBUTED_EXECUTION: false

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: Release ${{ steps.package.outputs.version }}
          draft: false
          prerelease: false
